package graphique;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;

import javax.swing.JPanel;

import udra.Udra;

public class Udra_Relief_Panel extends JPanel {
	
private Udra udraToDraw;
private String colorMinValue;
private String colorMaxValue;
	
	public Udra_Relief_Panel (Udra udraToDrawIn , String colorMinValueIn , String colorMaxValueIn)
	{
		super();
		udraToDraw = udraToDrawIn;
		colorMinValue = colorMinValueIn;
		colorMaxValue = colorMaxValueIn;
		
		
addMouseMotionListener(new MouseMotionListener() {
			
			
			public void mouseMoved(MouseEvent e) {
				//Rï¿½cupï¿½re la position du cureseur ï¿½ chaque mouvement et redessine la page
		    	 MousePos = new Point(e.getX() , e.getY());
				erase();
				
				boolean onBtn = false;
				for (int i = 0 ; i < list_button.sizeRow() ; i++)
				{
					if ( list_button.get("type_position" , i).toString().equals("fx"))
					{
						if ( e.getX() > list_button.getDbl("x", i) && e.getX() < list_button.getDbl("x", i) + default_width_btn && e.getY() > list_button.getDbl("y", i) && e.getY() < list_button.getDbl("y", i) + default_height_btn  )
							onBtn = true;
					}
					else
					{
						if ( e.getX() > list_button.getDbl("x", i) * getWidth() / 100 && e.getX() < (list_button.getDbl("x", i)  * getWidth() / 100 + default_width_btn) && e.getY() > list_button.getDbl("y", i) * getHeight() / 100 &&  e.getY() < ( list_button.getDbl("y", i)  * getHeight() / 100 + default_height_btn )  )
							onBtn = true;
					}
				}
				      
			      if ( onBtn )
				      setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR) );
			      else
				      setCursor(Cursor.getDefaultCursor());
				    	  
				
			}
			
};
		
	}

	
	//cette méthode dessinne le contenue de la fenètre
	  public void paintComponent(Graphics g) {

		//dessine le fond de la fenetre
	    g.setColor(Color.WHITE);
	    g.fillRect(0, 0, this.getWidth(), this.getHeight());
	     

	    double largeurFenetre = this.getWidth();
	    double hauteurFenetre = this.getHeight();
	    

	    //calcul the color mapping
	    Udra mapToDraw = Drawing_Relief_Map.calculColorMapping(udraToDraw, colorMinValue, colorMaxValue);
	    
	    
	    //draw the map
	    double sqrHigh = hauteurFenetre / mapToDraw.sizeRow();
	    double sqrWidth = largeurFenetre / mapToDraw.sizeColumn();
	    
	    
	    for (int x = 0; x < mapToDraw.sizeColumn() ; x++)
	    {
	    	for (int y = 0; y < mapToDraw.sizeRow() ; y++)
		    {
	    		 //draw a squarre
	    	    g.setColor( (Color) mapToDraw.get(x, y));
	    	    g.fillRect( (int) sqrWidth  * x, (int) sqrHigh  * y ,(int) sqrWidth ,  (int) sqrHigh );
		    }
	    }
	    
	   
	    
	  }

}
